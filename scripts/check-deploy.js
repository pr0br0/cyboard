// #filename=scripts/check-deploy.js#
const mongoose = require('mongoose');
const dotenv = require('dotenv');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é production
dotenv.config({ path: '.env.production' });

async function checkDeploy() {
    console.log('üîç Checking deployment prerequisites...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const requiredEnvVars = [
        'MONGODB_URI',
        'JWT_SECRET',
        'CLOUDINARY_CLOUD_NAME',
        'CLOUDINARY_API_KEY',
        'CLOUDINARY_API_SECRET'
    ];

    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
    
    if (missingVars.length > 0) {
        console.error('‚ùå Missing required environment variables:', missingVars);
        process.exit(1);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try {
        await mongoose.connect(process.env.MONGODB_URI);
        console.log('‚úÖ Database connection successful');
        await mongoose.disconnect();
    } catch (error) {
        console.error('‚ùå Database connection failed:', error.message);
        process.exit(1);
    }

    console.log('‚úÖ All deployment checks passed!');
}

checkDeploy().catch(console.error);